# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: |
        echo "FROM balenalib/raspberrypi3-debian:bookworm" > Dockerfile
        echo "RUN apt-get update && apt-get install -y golang-go gcc libc6-dev" >> Dockerfile
        docker build -t go-builder .

    - name: Build Go program using docker
      run: |
        docker run --rm -v "$PWD":/usr/src/myapp -w /usr/src/myapp go-builder go build -v -o bill-splitter ./...
    
    - name: Test
      run: go test -v ./...
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false
      
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bill-splitter
        asset_name: bill-splitter
        asset_content_type: application/octet-stream