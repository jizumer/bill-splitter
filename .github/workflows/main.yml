# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.2'

    - name: Install ARM64 GCC
      run: sudo apt-get install -y arm-linux-gnueabihf-gcc

    - name: Build for Linux ARM
      env:
        CGO_ENABLED: 1
      run: |
        CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++ CGO_ENABLED=1 GOOS=linux GOARCH=arm64 GOARM=7 go build -v -o bill-splitter ./...

    - name: Test
      run: go test -v ./...
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false
      
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bill-splitter
        asset_name: bill-splitter
        asset_content_type: application/octet-stream